-- Inicializ√°cia frameworku
local Framework = nil
local ESX, QBCore
if GetResourceState('es_extended') == 'started' then
    Framework = 'ESX'
    ESX = exports["es_extended"]:getSharedObject()
elseif GetResourceState('qb-core') == 'started' then
    Framework = 'QBCore'
    QBCore = exports['qb-core']:GetCoreObject()
end

-- Funkcia na odoslanie notifik√°ci√≠ na serveri
local function SendNotify(src, message, type, duration)
    if Config.DebugMode then
        print(string.format("[DEBUG] Server notifik√°cia pre hr√°ƒça %d: %s, Typ: %s, Dƒ∫≈æka: %d", src, message, type, duration))
    end

    if Config.NotifyType == 'ox_lib' then
        TriggerClientEvent('ox_lib:notify', src, { type = type, description = message, duration = duration })
    elseif Config.NotifyType == 'esx' and Framework == 'ESX' then
        TriggerClientEvent('esx:showNotification', src, message)
    elseif Config.NotifyType == 'qbcore' and Framework == 'QBCore' then
        TriggerClientEvent('QBCore:Notify', src, message, type, duration)
    else
        -- Fallback na OX_lib
        TriggerClientEvent('ox_lib:notify', src, { type = type, description = message, duration = duration })
    end
end

RegisterNetEvent('mechanic:reward', function(amount)
    local src = source
    local xPlayer, qbPlayer

    if Framework == 'ESX' then
        xPlayer = ESX.GetPlayerFromId(src)
        if not xPlayer then return end
    elseif Framework == 'QBCore' then
        qbPlayer = QBCore.Functions.GetPlayer(src)
        if not qbPlayer then return end
    end

    -- ‚úÖ Overenie, ƒçi hr√°ƒç m√° mechanick√Ω job
    local allowedJobs = { "bennys", "lsc" } -- Tu pridaj joby, ktor√© m√¥≈æu dost√°va≈• peniaze
    local playerJob

    if Framework == 'ESX' then
        playerJob = xPlayer.getJob().name
    elseif Framework == 'QBCore' then
        playerJob = qbPlayer.PlayerData.job.name
    end

    local isAllowed = false
    for _, job in ipairs(allowedJobs) do
        if playerJob == job then
            isAllowed = true
            break
        end
    end

    if not isAllowed then
        if Config.DebugMode then
            print(string.format("üö® [MECHANIC JOB] Hr√°ƒç (%d) sa pok√∫sil dosta≈• peniaze, ale nem√° mechanick√Ω job (%s)!", src, playerJob))
        end
        return
    end

    -- ‚úÖ Overenie, ƒçi amount je ƒç√≠slo a v rozumnom rozmedz√≠
    if type(amount) ~= "number" or amount < 10 or amount > 5000 then
        if Config.DebugMode then
            print(string.format("üö® [MECHANIC JOB] Hr√°ƒç (%d) sa pok√∫sil z√≠ska≈• neplatn√∫ sumu: $%d", src, amount))
        end
        return
    end

    -- ‚úÖ Pridanie pe≈àaz√≠ hr√°ƒçovi
    if Framework == 'ESX' then
        xPlayer.addMoney(amount)
    elseif Framework == 'QBCore' then
        qbPlayer.Functions.AddMoney('cash', amount)
    end

    SendNotify(src, 'Z√≠skal si $'..amount, 'success', 5000)
    if Config.DebugMode then
        print(string.format("‚úÖ [MECHANIC JOB] Hr√°ƒç (%d) z√≠skal $%d", src, amount))
    end
end)

RegisterNetEvent('mechanic:spawnMissionNPC', function(npcCoords, vehicleCoords, vehicleModel)
    local src = source
    local xPlayer, qbPlayer

    if Framework == 'ESX' then
        xPlayer = ESX.GetPlayerFromId(src)
        if not xPlayer then return end
    elseif Framework == 'QBCore' then
        qbPlayer = QBCore.Functions.GetPlayer(src)
        if not qbPlayer then return end
    end

    -- ‚úÖ Kontrola, ƒçi hr√°ƒç m√° mechanick√Ω job
    local allowedJobs = { "bennys", "lsc" }
    local playerJob

    if Framework == 'ESX' then
        playerJob = xPlayer.getJob().name
    elseif Framework == 'QBCore' then
        playerJob = qbPlayer.PlayerData.job.name
    end

    local isAllowed = false
    for _, job in ipairs(allowedJobs) do
        if playerJob == job then
            isAllowed = true
            break
        end
    end

    if not isAllowed then
        if Config.DebugMode then
            print(string.format("üö® [MECHANIC JOB] Hr√°ƒç (%d) sa pok√∫sil spusti≈• misiu, ale nem√° mechanick√Ω job (%s)!", src, playerJob))
        end
        return
    end

    if Config.DebugMode then
        print(string.format("DEBUG: Posielam klientovi inform√°cie na spawn NPC a vozidla hr√°ƒçovi (%d).", src))
    end
    TriggerClientEvent('mechanic:clientSpawnMission', src, npcCoords, vehicleCoords, vehicleModel)
end)